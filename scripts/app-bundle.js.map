{"version":3,"sources":["app.js","environment.js","main.js","anticorruptionlayer/teamcity-build-adapter.js","anticorruptionlayer/teamcity-build-type-adapter.js","communicationlayer/http-client-router.js","resources/index.js","view/build-types-configuration.js","view/failed-build-overview.js","view/running-build-overview.js","communicationlayer/teamcitystub/team-city-build-types-response.js","communicationlayer/teamcitystub/team-city-http-client-stub.js","communicationlayer/teamcitystub/team-city-latest-builds-response.js","communicationlayer/teamcitystub/team-city-latest-running-builds-response.js","domain/services/build-service.js","domain/services/build-type-service.js","view/elements/build-overview.js","/Users/Rob/buildradiator/src/app.html","/Users/Rob/buildradiator/src/css/custom.css","/Users/Rob/buildradiator/src/view/build-types-configuration.html","/Users/Rob/buildradiator/src/view/failed-build-overview.html","/Users/Rob/buildradiator/src/view/running-build-overview.html","/Users/Rob/buildradiator/src/view/elements/build-overview.html"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","fetchBuildArray","clientRouter","url","init","method","headers","Headers","fetch","response","json","jsonResponse","buildType","filter","buildTypeElement","builds","build","length","id","number","status","statusText","TeamcityBuildAdapter","getAllLatestFinishedBuilds","baseUrl","getAllLatestRunningBuilds","TeamcityBuildTypeAdapter","getBuildTypes","makeInit","makeBuildType","label","makeLabel","projectName","split","labelName","reduce","p1","p2","HttpClientRouter","realHttpClient","teamCityHttpClientStub","includes","BuildTypesConfiguration","service","activate","params","getBuildTypesGroupedByLabel","buildTypesGroupedByLabel","FailedBuildOverview","addToBlackListFailedBuilds","buildId","getBlackListFailedBuilds","setAllFailedBuilds","getAllFailedBuilds","bind","setInterval","RunningBuildOverview","buildService","addToBlacklistLatestRunningBuilds","getBlacklistLatestRunningBuilds","setAllRunningBuilds","TeamCityHttpClientStub","resolve","Error","BuildService","teamcityBuildAdapter","all","latestFinishedBuilds","buildArrays","latestRunningBuilds","isNotInBlackListFailedBuilds","finishedBuild","failedBuild","drawAttention","isNewBuildRunning","getCorrespondingBuild","latestRunningBuild","undefined","buildNumber","isNotInBlacklistLatestRunningBuilds","runningBuild","localStorage","blackListFailedBuilds","JSON","stringify","concat","blacklistLatestRunningBuilds","parse","BuildTypeService","teamcityBuildTypeAdapter","buildTypes","root","element","currentRoot","addToCurrentRoot","addLabelToCurrentRootRecursivelyIfThereIsOne","addElementToCurrentRootIfNotYetThere","changeCurrentRootToNewElement","addElementToCurrentRoot","type","changeCurrentRootsTypeToLabelIfPresent","BuildOverview","showBlackList","getBuildStatusCssClass","getDrawAttentionCssClass","startDrag","event","dataTransfer","setData","target","endDrag","preventEventPropagation","preventDefault","drop","addToBlacklist","getData","getBlacklist"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Teamcity radiator';\n    config.map([\n      { route: 'failed/:baseUrl', name: 'Faled Build Overview', moduleId: 'view/failed-build-overview' },\n      { route: 'running/:baseUrl', name: 'Running Build Overview', moduleId: 'view/running-build-overview' },\n      { route: 'config/:baseUrl', name: 'Build Type Configuration', moduleId: 'view/build-types-configuration' }\n    ]);\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { HttpClientRouter } from '../communicationlayer/http-client-router';\nimport { inject } from 'aurelia-framework';\n\nfunction fetchBuildArray(clientRouter, url) {\n  let init = {\n    method: 'GET',\n    headers: new Headers({\n      'Accept': 'application/json',\n      'X-Requested-With': 'Fetch',\n    })\n  };\n\n  return clientRouter.fetch(url, init)\n    .then(response => response.json())\n    .then(jsonResponse =>\n      jsonResponse.buildType\n        .filter(buildTypeElement => buildTypeElement.builds.build.length > 0)\n        .map(buildTypeElement => {\n          return {\n            \"id\": buildTypeElement.id,\n            \"name\": buildTypeElement.name,\n            \"buildNumber\": buildTypeElement.builds.build[0].number,\n            \"status\": buildTypeElement.builds.build[0].status,\n            \"statusText\": buildTypeElement.builds.build[0].statusText,\n            \"drawAttention\": false\n          }\n        })\n    );\n}\n\n@inject(HttpClientRouter)\nexport class TeamcityBuildAdapter {\n  constructor(clientRouter) {\n    this.clientRouter = clientRouter;\n  }\n\n  getAllLatestFinishedBuilds(baseUrl) {\n    let url = 'http://' + baseUrl + '/guestAuth/app/rest/buildTypes?locator=affectedProject:(id:_Root)&fields=buildType(id,name,builds($locator(running:false,canceled:false,count:1),build(number,status,statusText)))';\n    return fetchBuildArray(this.clientRouter, url);\n  }\n\n  getAllLatestRunningBuilds(baseUrl) {\n    let url = 'http://' + baseUrl + '/guestAuth/app/rest/buildTypes?locator=affectedProject:(id:_Root)&fields=buildType(id,name,builds($locator(running:true,canceled:false,count:1),build(number,status,statusText)))';\n    return fetchBuildArray(this.clientRouter, url);\n  }\n}\n","import { HttpClientRouter } from '../communicationlayer/http-client-router';\nimport { inject } from 'aurelia-framework';\n\n\n@inject(HttpClientRouter)\nexport class TeamcityBuildTypeAdapter {\n    constructor(clientRouter) {\n        this.clientRouter = clientRouter;\n    }\n\n    getBuildTypes(url) {\n        return this.clientRouter.fetch(url + \"/guestAuth/app/rest/buildTypes\", makeInit())\n            .then(response => response.json())\n            .then(jsonResponse => makeBuildType(jsonResponse));\n\n        function makeInit() {\n            return {\n                method: 'GET',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    'X-Requested-With': 'Fetch',\n                })\n            };\n        }\n\n        function makeBuildType(jsonResponse) {\n            return jsonResponse.buildType\n                .map(buildTypeElement => {\n                    return {\n                        id: buildTypeElement.id,\n                        name: buildTypeElement.name,\n                        label: makeLabel(buildTypeElement.projectName)\n                    };\n                });\n\n            function makeLabel(projectName) {\n                return projectName.split(\" :: \")\n                    .map(labelName => {\n                        return { name: labelName };\n                    })\n                    .reduce((p1, p2) => {\n                        p2.label = p1;\n                        return p2;\n                    });\n            }\n        }\n\n    }\n}\n","import { HttpClient } from 'aurelia-fetch-client';\nimport { TeamCityHttpClientStub } from './teamcitystub/team-city-http-client-stub';\nimport { inject } from 'aurelia-framework';\n\n@inject(HttpClient, TeamCityHttpClientStub)\nexport class HttpClientRouter {\n    constructor(realHttpClient, teamCityHttpClientStub) {\n        this.realHttpClient = realHttpClient;\n        this.teamCityHttpClientStub = teamCityHttpClientStub;\n    }\n\n    fetch(url, init) {\n        return url.includes('stub') ? this.teamCityHttpClientStub.fetch(url) : this.realHttpClient.fetch(url, init);\n    }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { BuildTypeService } from '../domain/services/build-type-service';\nimport { inject } from 'aurelia-framework';\n\n@inject(BuildTypeService)\nexport class BuildTypesConfiguration {\n    constructor(service) {\n        this.service = service;\n    }\n\n    activate(params) {\n        this.service\n        .getBuildTypesGroupedByLabel(params.baseUrl)\n        .then(buildTypesGroupedByLabel => this.buildTypesGroupedByLabel = buildTypesGroupedByLabel);\n    }\n} ","import { BuildService } from '../domain/services/build-service';\nimport { inject } from 'aurelia-framework';\n\n@inject(BuildService)\nexport class FailedBuildOverview {\n  constructor(service) {\n    this.service = service;\n    this.addToBlackListFailedBuilds = buildId => service.addToBlackListFailedBuilds(buildId);\n    this.getBlackListFailedBuilds = () => service.getBlackListFailedBuilds();\n  }\n\n  activate(params) {\n    function setAllFailedBuilds(params) {\n      this.service\n        .getAllFailedBuilds(params.baseUrl)\n        .then(builds => { this.builds = builds; });\n    }\n\n    setAllFailedBuilds.bind(this)(params);\n    setInterval(setAllFailedBuilds.bind(this), 30000, params);\n  }\n}\n","import { BuildService } from '../domain/services/build-service';\nimport { inject } from 'aurelia-framework';\n\n@inject(BuildService)\nexport class RunningBuildOverview {\n  constructor(buildService) {\n    this.buildService = buildService;\n    this.addToBlacklistLatestRunningBuilds = buildId => buildService.addToBlacklistLatestRunningBuilds(buildId);\n    this.getBlacklistLatestRunningBuilds = () => buildService.getBlacklistLatestRunningBuilds();\n  }\n\n  activate(params) {\n    function setAllRunningBuilds(params) {\n      this.buildService\n        .getAllLatestRunningBuilds(params.baseUrl)\n        .then(builds => { this.builds = builds; });\n    }\n\n    setAllRunningBuilds.bind(this)(params);\n    setInterval(setAllRunningBuilds.bind(this), 30000, params);\n  }\n}\n","export default {\n    \"count\": 11,\n    \"href\": \"/httpAuth/app/rest/buildTypes\",\n    \"buildType\": [\n        {\n            \"id\": \"build_1_id\",\n            \"name\": \"build 1\",\n            \"projectName\": \"Proj1 :: SubProj1\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_1_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_1_id\"\n        },\n        {\n            \"id\": \"build_2_id\",\n            \"name\": \"build 2\",\n            \"projectName\": \"Proj1 :: SubProj1\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_2_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_2_id\"\n        },\n        {\n            \"id\": \"build_3_id\",\n            \"name\": \"build 3\",\n            \"projectName\": \"Proj2 :: SubProj1\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_3_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_3_id\"\n        },\n        {\n            \"id\": \"build_4_id\",\n            \"name\": \"build 4\",\n            \"projectName\": \"Proj2 :: SubProj1\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_4_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_4_id\"\n        },\n        {\n            \"id\": \"build_5_id\",\n            \"name\": \"same name as other build\",\n            \"projectName\": \"Proj1 :: SubProj2\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_5_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_5_id\"\n        },\n        {\n            \"id\": \"build_6_id\",\n            \"name\": \"same name as other build\",\n            \"projectName\": \"Proj1 :: SubProj4\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_6_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_6_id\"\n        },\n        {\n            \"id\": \"build_7_id\",\n            \"name\": \"build 7\",\n            \"projectName\": \"Proj1 :: SubProj2\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_7_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_7_id\"\n        },\n        {\n            \"id\": \"build_8_id\",\n            \"name\": \"build 8\",\n            \"projectName\": \"Proj1 :: SubProj1\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_8_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_8_id\"\n        },\n        {\n            \"id\": \"build_9_id\",\n            \"name\": \"build 9\",\n            \"projectName\": \"Proj1 :: SubProj1\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_9_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_9_id\"\n        },\n        {\n            \"id\": \"build_10_id\",\n            \"name\": \"build 3\",\n            \"projectName\": \"Proj1 :: SubProj1 :: SubProj1\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_3_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_3_id\"\n        },\n        {\n            \"id\": \"build_25_id\",\n            \"name\": \"build 25\",\n            \"projectName\": \"Proj5\",\n            \"projectId\": \"Proj1_SubProj1\",\n            \"href\": \"/httpAuth/app/rest/buildTypes/id:build_25_id\",\n            \"webUrl\": \"http://testurl.com/viewType.html?buildTypeId=build_25_id\"\n        },\n    ]\n};","import teamCitylatestBuildsResponse from './team-city-latest-builds-response';\nimport teamCitylatestRunningBuildsResponse from './team-city-latest-running-builds-response';\nimport teamCityBuildTypesResponse from './team-city-build-types-response';\n\nexport class TeamCityHttpClientStub {\n  fetch(url) {\n    if (url.includes('running:false')) {\n      return Promise.resolve({json: () => teamCitylatestBuildsResponse});\n    }\n    if (url.includes('running:true')) {\n      return Promise.resolve({json: () => teamCitylatestRunningBuildsResponse});\n    }\n    if (url === 'host/guestAuth/app/rest/buildTypes') {\n      return Promise.resolve({json: () => teamCityBuildTypesResponse});\n    }\n    throw new Error(\"team city http client stub doesn't support \" + url);\n  }\n};\n","export default {\n  \"buildType\": [\n    {\n      \"id\": \"build_1_id\",\n      \"name\": \"build 1\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.1.70.17327\",\n            \"status\": \"FAILURE\",\n            \"statusText\": \"Tests passed: 198, ignored: 9\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_2_id\",\n      \"name\": \"build 2\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.1.6965.17318\",\n            \"status\": \"SUCCESS\",\n            \"statusText\": \"Tests passed: 2391, ignored: 6\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_3_id\",\n      \"name\": \"build 3\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"123\",\n            \"status\": \"SUCCESS\",\n            \"statusText\": \"Tests passed: 35\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_4_id\",\n      \"name\": \"build 4\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.1.54.17253\",\n            \"status\": \"SUCCESS\",\n            \"statusText\": \"Tests passed: 35\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_5_id\",\n      \"name\": \"same name as other build\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.1.54.17287\",\n            \"status\": \"FAILURE\",\n            \"statusText\": \"Tests failed: 4 (1 new), passed: 31\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_6_id\",\n      \"name\": \"same name as other build\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"1.2.54.17287\",\n            \"status\": \"FAILURE\",\n            \"statusText\": \"Tests failed: 2, passed: 33; snapshot dependency failed: Main :: Data Quality Tests :: build 6\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_7_id\",\n      \"name\": \"build 7\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.5.54.17287\",\n            \"status\": \"FAILURE\",\n            \"statusText\": \"Tests failed: 3, passed: 32; snapshot dependency failed: Main :: Data Quality Tests :: build 7\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_8_id\",\n      \"name\": \"build 8\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.5.87.17287\",\n            \"status\": \"SUCCESS\",\n            \"statusText\": \"Tests failed: 8 (1 new), passed: 27; snapshot dependency failed: Main :: Data Quality Tests :: build 8\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_9_id\",\n      \"name\": \"build 9\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.5.99.17287\",\n            \"status\": \"FAILURE\",\n            \"statusText\": \"Tests failed: 13, passed: 22; snapshot dependency failed: Main :: Data Quality Tests :: build 9\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_10_id\",\n      \"name\": \"build 10\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.5.99.21\",\n            \"status\": \"FAILURE\",\n            \"statusText\": \"Tests failed: 10, passed: 25\"\n          }\n        ]\n      }\n    }\n  ]\n};","export default {\n  \"buildType\": [\n    {\n      \"id\": \"build_1_id\",\n      \"name\": \"build 1\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.1.70.17328\",\n            \"status\": \"SUCCESS\",\n            \"statusText\": \"Tests passed: 198, ignored: 9\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_25_id\",\n      \"name\": \"build 25\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.1.6965.17318\",\n            \"status\": \"SUCCESS\",\n            \"statusText\": \"Tests passed: 2391, ignored: 6\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_3_id\",\n      \"name\": \"build 3\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"120\",\n            \"status\": \"FAILURE\",\n            \"statusText\": \"Tests passed: 35\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"build_4_id\",\n      \"name\": \"build 4\",\n      \"builds\": {\n        \"build\": [\n          {\n            \"number\": \"3.1.54.17255\",\n            \"status\": \"FAILURE\",\n            \"statusText\": \"Tests passed: 35\"\n          }\n        ]\n      }\n    }]\n};","import { TeamcityBuildAdapter } from '../../anticorruptionlayer/teamcity-build-adapter';\nimport { inject } from 'aurelia-framework';\n\n@inject(TeamcityBuildAdapter)\nexport class BuildService {\n    constructor(teamcityBuildAdapter) {\n        this.teamcityBuildAdapter = teamcityBuildAdapter;\n    }\n\n    getAllFailedBuilds(baseUrl) {\n        return Promise.all([this.teamcityBuildAdapter.getAllLatestFinishedBuilds(baseUrl), this.teamcityBuildAdapter.getAllLatestRunningBuilds(baseUrl)])\n            .then(buildArrays => {\n\n                let latestFinishedBuilds = buildArrays[0];\n                let latestRunningBuilds = buildArrays[1];\n\n                function isNotInBlackListFailedBuilds(finishedBuild) {\n                    return !this.getBlackListFailedBuilds().includes(finishedBuild.id);\n                }\n\n                return latestFinishedBuilds\n                    .filter(finishedBuild => finishedBuild.status === 'FAILURE')\n                    .filter(finishedBuild => isNotInBlackListFailedBuilds.bind(this)(finishedBuild))\n                    .map(failedBuild => {\n                        failedBuild.drawAttention = isNewBuildRunning();\n                        return failedBuild;\n\n                        function isNewBuildRunning() {\n\n                            function getCorrespondingBuild() {\n                                return latestRunningBuilds.filter(latestRunningBuild => latestRunningBuild.id === failedBuild.id)[0];\n                            }\n\n                            return getCorrespondingBuild() !== undefined && getCorrespondingBuild().buildNumber > failedBuild.buildNumber;\n                        }\n                    });\n            });\n    }\n\n    getAllLatestRunningBuilds(baseUrl) {\n        function isNotInBlacklistLatestRunningBuilds(runningBuild) {\n            return !this.getBlacklistLatestRunningBuilds().includes(runningBuild.id);\n        }\n\n        return this.teamcityBuildAdapter.getAllLatestRunningBuilds(baseUrl)\n            .then(latestRunningBuilds => latestRunningBuilds\n                .filter(latestRunningBuild => isNotInBlacklistLatestRunningBuilds.bind(this)(latestRunningBuild))\n                .map(latestRunningBuild => {\n                    latestRunningBuild.drawAttention = true;\n                    return latestRunningBuild;\n                }));\n    }\n\n    addToBlackListFailedBuilds(buildId) {\n        localStorage.blackListFailedBuilds = JSON.stringify(this.getBlackListFailedBuilds().concat(buildId));\n    }\n\n    addToBlacklistLatestRunningBuilds(buildId) {\n        localStorage.blacklistLatestRunningBuilds = JSON.stringify(this.getBlacklistLatestRunningBuilds().concat(buildId));\n    }\n\n    getBlackListFailedBuilds(buildId) {\n        return localStorage.blackListFailedBuilds ? JSON.parse(localStorage.blackListFailedBuilds) : [];\n    }\n\n    getBlacklistLatestRunningBuilds(buildId) {\n        return localStorage.blacklistLatestRunningBuilds ? JSON.parse(localStorage.blacklistLatestRunningBuilds) : [];\n    }\n}\n","import { TeamcityBuildTypeAdapter } from '../../anticorruptionlayer/teamcity-build-type-adapter';\nimport { inject } from 'aurelia-framework';\n\n@inject(TeamcityBuildTypeAdapter)\nexport class BuildTypeService {\n    constructor(teamcityBuildTypeAdapter) {\n        this.teamcityBuildTypeAdapter = teamcityBuildTypeAdapter;\n    }\n\n    getBuildTypesGroupedByLabel(baseUrl) {\n        return this.teamcityBuildTypeAdapter.getBuildTypes(baseUrl)\n            .then(buildTypes => {\n                return buildTypes.reduce((root, element) => {\n                    let currentRoot = root;\n                    addToCurrentRoot(element);\n                    return root;\n\n                    function addToCurrentRoot(element) {\n                        addLabelToCurrentRootRecursivelyIfThereIsOne();\n                        addElementToCurrentRootIfNotYetThere();\n                        changeCurrentRootToNewElement();\n\n                        function changeCurrentRootToNewElement() {\n                            currentRoot = currentRoot[element.name];\n                        }\n\n                        function addLabelToCurrentRootRecursivelyIfThereIsOne() {\n                            if (element.label) {\n                                addToCurrentRoot(element.label);\n                            }\n                        }\n\n                        function addElementToCurrentRootIfNotYetThere() {\n                            if (!currentRoot[element.name]) {\n                                addElementToCurrentRoot();\n                            }\n\n                            function addElementToCurrentRoot() {\n                                currentRoot[element.name] = { type: \"build\" };\n                                changeCurrentRootsTypeToLabelIfPresent();\n\n                                function changeCurrentRootsTypeToLabelIfPresent() {\n                                    if (currentRoot.type) {\n                                        currentRoot.type = \"label\";\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }, {});\n            });\n    }\n}","import { bindable } from 'aurelia-framework';\n\nexport class BuildOverview {\n    @bindable builds;\n    @bindable addToBlacklist;\n    @bindable getBlacklist;\n\n    constructor() {\n        this.showBlackList = false;\n    }\n\n    getBuildStatusCssClass(build) {\n        if (build.status === 'SUCCESS') {\n            return 'alert-success';\n        }\n        if (build.status === 'FAILURE') {\n            return 'alert-danger';\n        }\n        throw new Error('The buildstatus \"' + build.status + '\" is invalid')\n    }\n\n    getDrawAttentionCssClass(build) {\n        if (build.drawAttention === true) {\n            return 'draw-attention';\n        }\n        if (build.drawAttention === false) {\n            return '';\n        }\n        throw new Error('The drawAttention \"' + build.drawAttention + '\" is invalid')\n    }\n\n    startDrag(event) {\n        this.showBlackList = true;\n        event.dataTransfer.setData(\"id\", event.target.id);\n        return true;\n    }\n\n    endDrag(event) {\n        this.showBlackList = false;\n    }\n\n    preventEventPropagation(event) {\n        event.preventDefault();\n    }\n\n    drop(event) {\n        this.addToBlacklist(event.dataTransfer.getData(\"id\"));\n        this.builds = this.builds.filter(build => !this.getBlacklist().includes(build.id));\n        this.showBlackList = false;\n    }\n}\n",null,null,null,null,null,null],"sourceRoot":"../src"}